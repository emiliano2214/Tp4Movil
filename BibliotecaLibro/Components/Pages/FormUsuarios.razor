@page "/FormUsuario"
@page "/FormUsuario/{id:int?}"
@using BibliotecaLibro.Shared.Models
@inject BibliotecaLibro.Servicios.UsuarioServicio UsuarioServicio
@inject NavigationManager Navigation

<div style="text-align:center;">
    <img src="Images/logo.png" alt="Logo" style="max-width:200px" />
</div>

<h3>@(UsuarioModel.IdUsuario == 0 ? "Agregar Usuario" : "Editar Usuario")</h3>

<button class="btn btn-primary p-3 mb-3" @onclick="IrAlMenu">
    <img src="Images/Iconos/Menu.png" width="50" class="me-1" />
    Menú
</button>

@if (cargando)
{
    <div class="alert alert-info">Cargando usuario...</div>
}
else
{
    <EditForm Model="@UsuarioModel" OnValidSubmit="GuardarUsuario">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="nombre" class="form-label">Nombre de Usuario:</label>
            <InputText id="nombre" class="form-control" @bind-Value="UsuarioModel.NombreUsuario" />
        </div>

        <div class="mb-3">
            <label for="contraseña" class="form-label">Contraseña:</label>
            <InputText id="contraseña" type="password" class="form-control" @bind-Value="UsuarioModel.Contraseña" />
        </div>

        <div class="mb-3">
            <label for="privilegio" class="form-label">Privilegio:</label>
            <InputSelect id="privilegio" class="form-control" @bind-Value="UsuarioModel.Privilegio">
                <option value="">Seleccionar privilegio</option>
                <option value="Admin">Administrador</option>
                <option value="Usuario">Usuario</option>
                <option value="Moderador">Moderador</option>
            </InputSelect>
        </div>

        <div class="mb-3">
            <label for="imagen" class="form-label">Nombre de la Imagen (ej. face1.png):</label>
            <InputText id="imagen" class="form-control" @bind-Value="UsuarioModel.Img" />
        </div>

        @if (!string.IsNullOrEmpty(UsuarioModel.Img))
        {
            <div class="mb-3">
                <label class="form-label">Vista previa de la imagen:</label>
                <div>
                    <img src="@($"Images/Usuarios/{UsuarioModel.Img}")" alt="Vista previa" style="max-width: 150px; max-height: 150px; border-radius: 8px;" />
                </div>
            </div>
        }

        <div class="d-flex gap-2">
            <button type="submit" class="btn btn-success" disabled="@guardando">
                @if (guardando)
                {
                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                    <span>Guardando...</span>
                }
                else
                {
                    <span>@(UsuarioModel.IdUsuario == 0 ? "Agregar" : "Guardar Cambios")</span>
                }
            </button>

            <button type="button" class="btn btn-secondary" @onclick="Cancelar">
                Cancelar
            </button>
        </div>
    </EditForm>
}

@code {
    [Parameter] public int? id { get; set; }

    private UsuarioDTO UsuarioModel = new UsuarioDTO();
    private bool cargando = false;
    private bool guardando = false;

    protected override async Task OnInitializedAsync()
    {
        await CargarUsuario();
    }

    protected override async Task OnParametersSetAsync()
    {
        await CargarUsuario();
    }

    private async Task CargarUsuario()
    {
        if (id.HasValue && id.Value > 0)
        {
            cargando = true;
            try
            {
                var existente = await UsuarioServicio.GetUsuarioAsync(id.Value);
                if (existente != null)
                {
                    UsuarioModel = new UsuarioDTO(
                        existente.IdUsuario,
                        existente.NombreUsuario,
                        existente.Contraseña,
                        existente.Privilegio,
                        existente.Img
                    );
                }
            }
            finally
            {
                cargando = false;
            }
        }
        else
        {
            // Nuevo usuario
            UsuarioModel = new UsuarioDTO();
        }
    }

    private async Task GuardarUsuario()
    {
        guardando = true;
        try
        {
            bool resultado;
            if (UsuarioModel.IdUsuario == 0)
            {
                resultado = await UsuarioServicio.AddUsuarioAsync(UsuarioModel);
            }
            else
            {
                resultado = await UsuarioServicio.UpdateUsuarioAsync(UsuarioModel);
            }

            if (resultado)
            {
                Navigation.NavigateTo("/usuarios");
            }
            else
            {
                // Aquí podrías mostrar un mensaje de error
                // Por ejemplo, usando un toast o un alert
            }
        }
        finally
        {
            guardando = false;
        }
    }

    private void Cancelar()
    {
        Navigation.NavigateTo("/usuarios");
    }

    private void IrAlMenu()
    {
        Navigation.NavigateTo("/menu");
    }
}